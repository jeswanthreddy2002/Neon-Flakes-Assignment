{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jaswanth Reddy\\\\Downloads\\\\upload-files-cloudinary-mern-main\\\\upload-files-cloudinary-mern-main\\\\client\\\\src\\\\components\\\\ThumbnailList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThumbnailList() {\n  _s();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    // Fetch videos from the server\n    async function fetchVideos() {\n      try {\n        const response = await axios.get('/api/fetchData'); // Adjust the route if necessary\n        setVideos(response.data.videos);\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n      }\n    }\n    fetchVideos();\n  }, []); // Empty dependency array to run the effect only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thumbnail List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: video.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: video.Description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(ThumbnailList, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = ThumbnailList;\nexport default ThumbnailList;\nvar _c;\n$RefreshReg$(_c, \"ThumbnailList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","jsxDEV","_jsxDEV","ThumbnailList","_s","videos","setVideos","fetchVideos","response","get","data","error","console","children","to","fileName","_jsxFileName","lineNumber","columnNumber","map","video","index","Title","Description","_c","$RefreshReg$"],"sources":["C:/Users/Jaswanth Reddy/Downloads/upload-files-cloudinary-mern-main/upload-files-cloudinary-mern-main/client/src/components/ThumbnailList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ThumbnailList() {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch videos from the server\r\n    async function fetchVideos() {\r\n      try {\r\n        const response = await axios.get('/api/fetchData'); // Adjust the route if necessary\r\n        setVideos(response.data.videos);\r\n      } catch (error) {\r\n        console.error('Error fetching videos:', error);\r\n      }\r\n    }\r\n\r\n    fetchVideos();\r\n  }, []); // Empty dependency array to run the effect only once\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">\r\n        <button>Home</button>\r\n      </Link>\r\n\r\n      {/* Display videos */}\r\n      <div>\r\n        <h2>Thumbnail List</h2>\r\n        <ul>\r\n          {videos.map((video, index) => (\r\n            <li key={index}>\r\n              <h3>{video.Title}</h3>\r\n              <p>{video.Description}</p>\r\n              {/* Display thumbnail or other video details */}\r\n              {/* You can format and display thumbnail here */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThumbnailList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACA,eAAeU,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACpDH,SAAS,CAACE,QAAQ,CAACE,IAAI,CAACL,MAAM,CAAC;MACjC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;IAEAJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACF,IAAI;MAACc,EAAE,EAAC,GAAG;MAAAD,QAAA,eACVX,OAAA;QAAAW,QAAA,EAAQ;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAGPhB,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBhB,OAAA;QAAAW,QAAA,EACGR,MAAM,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBnB,OAAA;UAAAW,QAAA,gBACEX,OAAA;YAAAW,QAAA,EAAKO,KAAK,CAACE;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBhB,OAAA;YAAAW,QAAA,EAAIO,KAAK,CAACG;UAAW;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAFnBG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAvCQD,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAyCtB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}