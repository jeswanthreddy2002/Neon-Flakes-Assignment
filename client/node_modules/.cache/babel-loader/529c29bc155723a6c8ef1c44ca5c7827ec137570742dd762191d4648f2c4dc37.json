{"ast":null,"code":"// import React, { useState } from 'react'\n// import axios from 'axios';\n// import { useNavigate } from \"react-router-dom\";\n// import { ThreeDots } from 'react-loader-spinner'\n\n// const SecureUpload = () => {\n\n//   const [img, setImg] = useState(null);\n//   const [video, setVideo] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   const uploadFile = async (type, timestamp, signature) => {\n\n//     const folder = type === 'image' ? 'images' : 'videos';\n\n//     const data = new FormData();\n//     data.append(\"file\", type === 'image' ? img : video);\n//     data.append(\"timestamp\", timestamp);\n//     data.append(\"signature\", signature);\n//     data.append(\"api_key\", process.env.REACT_APP_CLOUDINARY_API_KEY);\n//     data.append(\"folder\", folder);\n\n//     try {\n//       let cloudName = process.env.REACT_APP_CLOUDINARY_CLOUD_NAME;\n//       let resourceType = type === 'image' ? 'image' : 'video';\n//       let api = `https://api.cloudinary.com/v1_1/${cloudName}/${resourceType}/upload`;\n\n//       const res = await axios.post(api, data);\n//       const { secure_url } = res.data;\n//       console.log(secure_url);\n//       return secure_url;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n\n//   const getSignatureForUpload = async (folder) => {\n//     try {\n//       const res = await axios.post(`${process.env.REACT_APP_BACKEND_BASEURL}/api/sign-upload`, { folder });\n//       return res.data;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       setLoading(true);\n\n//       // Get signature for Image upload\n//       const { timestamp: imgTimestamp, signature: imgSignature } = await getSignatureForUpload('images');\n\n//       // Get signature for video upload\n//       const { timestamp: videoTimestamp, signature: videoSignature } = await getSignatureForUpload('videos');\n\n//       // Upload image file\n//       const imgUrl = await uploadFile('image', imgTimestamp, imgSignature);\n\n//       // Upload video file\n//       const videoUrl = await uploadFile('video', videoTimestamp, videoSignature);\n\n//       // Send backend api request\n//       await axios.post(`${process.env.REACT_APP_BACKEND_BASEURL}/api/videos`, { imgUrl, videoUrl });\n\n//       // Reset states \n//       setImg(null);\n//       setVideo(null);\n\n//       console.log(\"File upload success!\");\n//       setLoading(false);\n//       navigate(\"/\")\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"video\">Video:</label>\n//           <br />\n//           <input\n//             type=\"file\"\n//             accept=\"video/*\"\n//             id=\"video\"\n//             onChange={(e) => setVideo((prev) => e.target.files[0])}\n//           />\n//         </div>\n//         <br />\n//         <div>\n//           <label htmlFor=\"img\">Image:</label>\n//           <br />\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             id=\"img\"\n//             onChange={(e) => setImg((prev) => e.target.files[0])}\n//           />\n//         </div>\n//         <br />\n//         <button type=\"submit\">Upload</button>\n//       </form>\n\n//       {\n//         loading && <ThreeDots\n//           height=\"80\"\n//           width=\"80\"\n//           radius=\"9\"\n//           color=\"#4fa94d\"\n//           ariaLabel=\"three-dots-loading\"\n//           wrapperStyle={{}}\n//           wrapperClassName=\"\"\n//           visible={true}\n//         />\n//       }\n//     </div>\n\n//   )\n// }\n\n// export default SecureUpload","map":{"version":3,"names":[],"sources":["C:/Users/Jaswanth Reddy/Downloads/upload-files-cloudinary-mern-main/upload-files-cloudinary-mern-main/client/src/components/SecureUpload.jsx"],"sourcesContent":["// import React, { useState } from 'react'\n// import axios from 'axios';\n// import { useNavigate } from \"react-router-dom\";\n// import { ThreeDots } from 'react-loader-spinner'\n\n// const SecureUpload = () => {\n\n//   const [img, setImg] = useState(null);\n//   const [video, setVideo] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   const navigate = useNavigate();\n\n//   const uploadFile = async (type, timestamp, signature) => {\n\n//     const folder = type === 'image' ? 'images' : 'videos';\n\n//     const data = new FormData();\n//     data.append(\"file\", type === 'image' ? img : video);\n//     data.append(\"timestamp\", timestamp);\n//     data.append(\"signature\", signature);\n//     data.append(\"api_key\", process.env.REACT_APP_CLOUDINARY_API_KEY);\n//     data.append(\"folder\", folder);\n\n//     try {\n//       let cloudName = process.env.REACT_APP_CLOUDINARY_CLOUD_NAME;\n//       let resourceType = type === 'image' ? 'image' : 'video';\n//       let api = `https://api.cloudinary.com/v1_1/${cloudName}/${resourceType}/upload`;\n\n//       const res = await axios.post(api, data);\n//       const { secure_url } = res.data;\n//       console.log(secure_url);\n//       return secure_url;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n\n//   const getSignatureForUpload = async (folder) => {\n//     try {\n//       const res = await axios.post(`${process.env.REACT_APP_BACKEND_BASEURL}/api/sign-upload`, { folder });\n//       return res.data;\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       setLoading(true);\n\n//       // Get signature for Image upload\n//       const { timestamp: imgTimestamp, signature: imgSignature } = await getSignatureForUpload('images');\n\n//       // Get signature for video upload\n//       const { timestamp: videoTimestamp, signature: videoSignature } = await getSignatureForUpload('videos');\n\n//       // Upload image file\n//       const imgUrl = await uploadFile('image', imgTimestamp, imgSignature);\n\n//       // Upload video file\n//       const videoUrl = await uploadFile('video', videoTimestamp, videoSignature);\n\n//       // Send backend api request\n//       await axios.post(`${process.env.REACT_APP_BACKEND_BASEURL}/api/videos`, { imgUrl, videoUrl });\n\n//       // Reset states \n//       setImg(null);\n//       setVideo(null);\n\n//       console.log(\"File upload success!\");\n//       setLoading(false);\n//       navigate(\"/\")\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"video\">Video:</label>\n//           <br />\n//           <input\n//             type=\"file\"\n//             accept=\"video/*\"\n//             id=\"video\"\n//             onChange={(e) => setVideo((prev) => e.target.files[0])}\n//           />\n//         </div>\n//         <br />\n//         <div>\n//           <label htmlFor=\"img\">Image:</label>\n//           <br />\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             id=\"img\"\n//             onChange={(e) => setImg((prev) => e.target.files[0])}\n//           />\n//         </div>\n//         <br />\n//         <button type=\"submit\">Upload</button>\n//       </form>\n\n//       {\n//         loading && <ThreeDots\n//           height=\"80\"\n//           width=\"80\"\n//           radius=\"9\"\n//           color=\"#4fa94d\"\n//           ariaLabel=\"three-dots-loading\"\n//           wrapperStyle={{}}\n//           wrapperClassName=\"\"\n//           visible={true}\n//         />\n//       }\n//     </div>\n\n\n//   )\n// }\n\n// export default SecureUpload"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}